JavaScript の プロトタイプについて学習したのをまとめてみました！

プロトタイプというのは簡単に言えば他のオブジェクトのプロパティを継承することです。

ただ、JavaScriptにおいては関数もプロパティとすることができ、基本的にプロトタイプとして継承するのはメソッドですね。(メソッドとはプロパティである関数のことです)

JavaScriptにはクラスは存在しないのですが、このプロトタイプを用いることでクラスライクな実装が可能になります。(CoffeeScriptではプロトタイプを基にして擬似的なクラスを用いることができます)

例を出すと

//クラス定義のようなものです
function Hoge(x,y){
  this.x = x;
  this.y = y;
}

//hogeのインスタンスのプロトタイプオブジェクトにプロパティを追加してます
Hoge.prototype.show = function(){
  print(this.x + this.y);
}

var test = new Hoge(2,5);

test.show();　//返り値は7です。

このようにプロパティを使うことができます。

また、通常のプロパティのようにdeleteではプロトタイプのプロパティは削除できないので注意してください!

delete test.show(); //評価値はtrueだが

test.show(); //返り値は7です。

ここまで読んできた中の方にはそもそも何でプロトタイプ使うのか疑問に思う方がいらっしゃるかもしれませんが、それについてはまた別の形でまとめる予定です。



